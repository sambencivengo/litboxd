import Head from 'next/head';
import { Inter } from '@next/font/google';
import {
	Box,
	Text,
	Image,
	Divider,
	Heading,
	VStack,
	Card,
	CardBody,
	CardFooter,
	Stack,
} from '@chakra-ui/react';
import React from 'react';
import { colors } from '../theme';
import { BookSearchBar } from '../components/BookSearchBar';
import { BOOK_COVER_BASE_URL } from '../constants';

interface BookResult {
	cover_i: string;
	author_name: string[];
	title: string;
}

export default function Home() {
	const [bookResults, setBookResults] = React.useState<BookResult[]>();

	// const isbns = bookCovers.map((cover) => {
	// 	let key =
	// 		cover === undefined ? Math.min(Math.random() * 100000000) : cover;

	// 	if (cover === undefined) {
	// 		return 'Book Cover Unavailable';
	// 	} else {
	// 		return cover;
	// 	}
	// });

	console.log(bookResults);

	return (
		<>
			<Head>
				<title>Litboxd</title>
				<meta
					name="description"
					content="Generated by create next app"
				/>
				<meta
					name="viewport"
					content="width=device-width, initial-scale=1"
				/>
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<main>
				<Box>
					<Box pb={10} px={20}>
						<BookSearchBar setBookResults={setBookResults} />
					</Box>
					<Heading size={'md'} color={colors.white}>
						A social platform for sharing your taste in literature
						and books.
					</Heading>
					<Divider />
					<VStack>
						{bookResults &&
							bookResults.map(
								({ author_name, cover_i, title }) => {
									if (cover_i) {
										return (
											<Card
												bgColor={colors.greyBlue}
												w={'400px'}
												key={cover_i}
												direction={{
													base: 'column',
													sm: 'row',
												}}
												overflow="hidden"
												variant="outline"
											>
												<Image
													objectFit="cover"
													maxW={{
														base: '100%',
														sm: '200px',
													}}
													src={`${BOOK_COVER_BASE_URL}${cover_i}-M.jpg`}
													alt={`${title} Cover`}
												/>

												<Stack>
													<CardBody>
														<Heading size="md">
															{title}
														</Heading>

														<Text py="2">
															by {author_name}
														</Text>
													</CardBody>

													<CardFooter></CardFooter>
												</Stack>
											</Card>
										);
									}
								}
							)}
					</VStack>
				</Box>
			</main>
		</>
	);
}
